close all;
string_0 = 'lv0 - relax.bmp';
string_1 = 'lv1 - easy.jpg';
string_2 = 'lv2 - normal.jpg';
string_3 = 'lv3 - hard.jpg';
string_4 = 'lv4 - crazy.jpg';
string_5 = 'lv5 - insane.jpg';
string_6 = 'lv6 - lunatic.jpg';
string_7 = '1.bmp';
string_8 = '2.bmp';
string_9 = '2.jpg';
string_10 = '3.bmp';
string_11 = '4.bmp';
string_12 = '5.bmp';
string_13 = '6.bmp';
Pic=imread(string_5);
[row, col, degree] = size(Pic);

if degree > 2
    Pic=rgb2gray(Pic);
end
%subplot(211);
figure,imshow(Pic);
title('原始图片');
[maxgrey, Pic] = OTSU_2(Pic);%大津算法计算二值图像
figure, imshow(Pic);
title('大津算法二值化以后');
imwrite(Pic,'OTSUbw.bmp');

Pic = imread('OTSUbw.bmp');
[leftline, k] = LineScan(Pic);
%描左侧线
ltl=leftline';
figure,plot(ltl(2,1:k));
title('左边线');
%plot(leftline(1:k, 2));

Pic = revolve(Pic, leftline, k);
figure, imshow(Pic);
title('旋转之后');
saveas(gcf,'leftrevolve.bmp')

for i = 1 : 4
    Pic = interpolation(Pic);
end

figure, imshow(Pic);
title('滤波完毕');

Pic = step2(Pic);
figure, imshow(Pic);
imwrite(Pic, 'step2.bmp');

%% 二维码的四个角的选择
%设置腐蚀膨胀的半径为20pixel
Pic = imread('step2.bmp');
se = strel('disk',20);
Pic_imopen = imopen(Pic, se);

bound = find_bound(Pic_imopen);
[H, theta, rho, peak, XY]= Hough(bound);
figure,imshow(Pic);
title('图像以及四个顶点');
hold on;
plot(XY(:, 1), XY(:, 2),'o');
imwrite(Pic, 'step3.bmp');
xlswrite(XY, M)；
%% 二维码的二次矫正
Pic = roll2((peak(1, 1)-90)/180*pi, Pic);
figure,imshow(Pic);
title('旋转之后');